package com.example.hariharasudhan.glassfirst;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.AdapterView;

import com.google.android.glass.app.Card;
import com.google.android.glass.media.Sounds;
import com.google.android.glass.view.WindowUtils;
import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

import java.util.ArrayList;
import java.util.List;

/**
 * An {@link Activity} showing a tuggable "Hello World!" card.
 * <p>
 * The main content view is composed of a one-card {@link CardScrollView} that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a {@link com.google.android.glass.touchpad.GestureDetector}.
 * @see <a href="https://developers.google.com/glass/develop/gdk/touch">GDK Developer Guide</a>
 */






public class WelcomeScreen extends Activity {


    /** {@link CardScrollView} to use as the main content view. */
    private CardScrollView mCardScroller;

    /** "Hello World!" {@link View} generated by {@link #buildView()}. */


    private List<CardBuilder> mCards;
    private CardScrollView mCardScrollView;


    @Override
    protected void onCreate(Bundle bundle){

            super.onCreate(bundle);
//        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);
        getWindow().requestFeature(WindowUtils.FEATURE_VOICE_COMMANDS);


        buildView();

        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return mCards.size();
            }

            @Override
            public Object getItem(int position) {
                return mCards.indexOf(position);
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mCards.get(position).getView(convertView, parent);
            }

            @Override
            public int getPosition(Object item) {
                return mCards.indexOf(item);
            }
        });


        // Handle the TAP event.
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.TAP);
                openOptionsMenu();
            }
        });

        mCardScroller.activate();
        setContentView(mCardScroller);
    }

    @Override
    protected void onResume() {
        super.onResume();
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

    /**
     * Builds a Glass styled "Hello World!" view using the {@link    Card} class.
     */
    private void buildView() {
        mCards = new ArrayList<CardBuilder>();

        mCards.add(new CardBuilder(this, CardBuilder.Layout.COLUMNS)
                .setText("Welcome to Glass Demo.")
                .addImage(R.drawable.f22_logo));

        mCards.add(new CardBuilder(this, CardBuilder.Layout.COLUMNS)
                .setText("If you see this, then you scrolled.")
                .setFootnote("Page 2")
                .addImage(R.drawable.ic_glass_logo));

        mCards.add(new CardBuilder(this, CardBuilder.Layout.COLUMNS)
                .setText("Demo card with multiple Images.")
                .setFootnote("Aren't they precious?")
                .addImage(R.drawable.f22_logo)
                .addImage(R.drawable.ic_glass_logo)
                .addImage(R.drawable.python)
                .addImage(R.drawable.javascript));

    }

    @Override
    public boolean onCreatePanelMenu(int featureId, Menu menu){
        if (featureId == WindowUtils.FEATURE_VOICE_COMMANDS || featureId ==  Window.FEATURE_OPTIONS_PANEL) {
            getMenuInflater().inflate(R.menu.main, menu);
            return true;
        }
        return super.onCreatePanelMenu(featureId, menu);
    }

    public void findEvents(String platform){
        Intent resultsIntent = new Intent(this, ResultActivity.class);
        resultsIntent.putExtra(ResultActivity.SEARCH, platform);
        startActivity(resultsIntent);
    }

    @Override
    public boolean onMenuItemSelected(int featureId, MenuItem item) {
        if (featureId == WindowUtils.FEATURE_VOICE_COMMANDS || featureId ==  Window.FEATURE_OPTIONS_PANEL) {
            switch (item.getItemId()) {
                case R.id.find_ruby:
                    findEvents("Ruby");
                    break;
                case R.id.find_javascript:
                    findEvents("Javascript");
                    break;
                case R.id.find_glass:
                    findEvents("Glass");
                    break;
            }
            return true;
        }
        return super.onMenuItemSelected(featureId, item);
    }

}
